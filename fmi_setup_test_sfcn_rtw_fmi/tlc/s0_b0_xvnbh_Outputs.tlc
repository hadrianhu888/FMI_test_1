%implements s0_b0_xvnbh_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

X_fmi_setup_test_T *_rtX;
%closefile localVarDecl
%<SLibCG_TrackContStates(0)>\
_rtX = %<(SLibCG_SE(SLibGetContStatesStructPtr()))>;
%<SLibCG_TrackEO(1)>\
%<SLibCG_TrackEO(0)>\
if (%<(SLibCGIRIsSampleHit(0, 0))>) {
    /* {S!d276}Outport: '<Root>/del' incorporates:
 *  Integrator: '<Root>/Integrator'
 */
    ((real_T *)ssGetOutputPortSignal(S, 0))[0] = _rtX->Integrator_CSTATE;
}
if (%<(SLibCGIRIsSampleHit(1, 0))>) {
    /* {S!d278}Outport: '<Root>/del1' incorporates:
 *  UnitDelay: '<Root>/Unit Delay'
 */
    ((real_T *)ssGetOutputPortSignal(S, 1))[0] = %<(SLibCG_SE(SLibCG_DWV(0, 0, 0, 1, "", -1, "", 0)))>;
}
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 2, 0)>
%endif
%if SLibCG_ArgAccessed(0, 2, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 2, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs(\
%assign comma = ""
%<comma>%<::tSimStructType> *S\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("Outputs", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%if SLibCG_ArgAccessed(0, 2, 1)
%<comma>int16_T tid\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 2, fcnProtoType)>
%endfunction
