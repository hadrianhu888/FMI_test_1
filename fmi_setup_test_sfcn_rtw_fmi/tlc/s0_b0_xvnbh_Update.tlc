%implements s0_b0_xvnbh_Update "C"

%function Update(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%<SLibCG_TrackEI(1)>\
if (%<(SLibCGIRIsSampleHit(1, 0))>) {
    /* {S!d280}Update for UnitDelay: '<Root>/Unit Delay' */
%<SLibCG_SetDWV(0, 0, 0, 1, "", -1, "", 0, "*((const real_T **)ssGetInputPortSignalPtrs(S, 1))[0]")>\
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Update", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Update"))
%<SLibCG_AccessArg(0, 3, 0)>
%endif
%if SLibCG_ArgAccessed(0, 3, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Update", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Update"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 3, 0)>
%endif
%endfunction
%function UpdateFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Update(\
%assign comma = ""
%<comma>%<::tSimStructType> *S\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("Update", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%if SLibCG_ArgAccessed(0, 3, 1)
%<comma>int16_T tid\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 3, fcnProtoType)>
%endfunction
