%implements s0_b0_xvnbh_Derivatives "C"

%function Derivatives(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

XDot_fmi_setup_test_T *_rtXdot;
%closefile localVarDecl
%<SLibCG_TrackContStatesDerivative(0)>\
_rtXdot = %<(SLibCG_SE(SLibGetContStatesDerivativeStructPtr()))>;
%<SLibCG_TrackEI(0)>\
/* Derivatives for Integrator: '<Root>/Integrator' */
_rtXdot->Integrator_CSTATE = *((const real_T **)ssGetInputPortSignalPtrs(S, 0))[0];
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Derivative", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Derivative"))
%<SLibCG_AccessArg(0, 4, 0)>
%endif
%if SLibCG_ArgAccessed(0, 4, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Derivative", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Derivative"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 4, 0)>
%endif
%<LibSetSystemField(system, "CachedDerivativeLocalVars", localVarDecl)>
%endfunction
%function DerivativesFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Derivatives(\
%assign comma = ""
%<comma>%<::tSimStructType> *S\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("Derivatives", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%if SLibCG_ArgAccessed(0, 4, 1)
%<comma>int16_T tid\
%assign comma = ", "
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 4, fcnProtoType)>
%endfunction
