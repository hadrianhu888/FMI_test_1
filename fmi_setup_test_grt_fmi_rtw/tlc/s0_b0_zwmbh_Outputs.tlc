%implements s0_b0_zwmbh_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%<SLibCG_TrackDW(0)>\
%<SLibCG_TrackEO(0)>\
%<SLibCG_TrackEI(0)>\
/* Outport: '<Root>/del' incorporates:
 *  Memory: '<Root>/Memory'
 */
fmi_setup_test_Y->del = fmi_setup_test_DW->Memory_PreviousInput;
/* Update for Memory: '<Root>/Memory' incorporates:
 *  UnitDelay: '<Root>/Unit Delay'
 */
fmi_setup_test_DW->Memory_PreviousInput = fmi_setup_test_DW->UnitDelay_DSTATE;
/* Update for UnitDelay: '<Root>/Unit Delay' incorporates:
 *  Inport: '<Root>/ref'
 */
fmi_setup_test_DW->UnitDelay_DSTATE = fmi_setup_test_U->ref;
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 1, 0)>
%endif
%if SLibCG_ArgAccessed(0, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 1, 0)
%<comma>%<::tSimStructType> * const fmi_setup_test_M\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("Outputs", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%endfunction
